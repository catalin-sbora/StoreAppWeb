@using StoreAppWeb.AppServices.DataModel;
@using StoreAppWeb.Client.Components.Common;

<div class="row list-entry @evenEntryText">
    <div class="col-3">@StockItem.Product.Name</div>
    <div class="col-2">@StockItem.Qty</div>
    <div class="col-4">@StockItem.Product.Description</div>
    <div class="col-1">@StockItem.Product.Price</div>
    <div class="col-1">@StockItem.TotalValue</div>
    <div class="col-1">
        <button class="btn" @onclick="EditButtonClicked" alt="Edit Cash Register">
            <i class="fas fa-edit">
            </i>
        </button>
        <button class="btn" href="" @onclick="DeleteButtonClicked" alt="Delete Item">
            <i class="fas fa-trash"></i>
        </button>
    </div>
</div>
<DeleteDialogComponent @ref="dialogComponent" 
                       ItemDescription="@StockItem.Product.Name" 
                       OnDeleteAccepted="async () => { await OnDeleteItem.InvokeAsync(StockItem); }">
</DeleteDialogComponent>

@code {
    [Parameter]
    public StockItemInfo StockItem { get; set; }
    [Parameter]
    public bool IsEvenEntry
    {
        get
        {
            return !string.IsNullOrEmpty(evenEntryText);
        }
        set
        {
            if (value == true)
                evenEntryText = "list-entry-even";
            else
                evenEntryText = "";
        }
    }

    [Parameter]
    public EventCallback<StockItemInfo> OnDeleteItem { get; set; }

    public EventCallback<StockItemInfo> OnUpdateItem { get; set; }
    private DeleteDialogComponent dialogComponent;

    private string evenEntryText;

   

    private async Task EditButtonClicked()
    {
        if (OnUpdateItem.HasDelegate)
        {
            await OnUpdateItem.InvokeAsync(StockItem);
        }
    }

    private void DeleteButtonClicked()
    {
        dialogComponent.Show();
    }


}
